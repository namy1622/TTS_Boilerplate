@{
}
<script src="https://cdn.tailwindcss.com"></script>

<body class="bg-gray-50">
    <div class="container mx-auto px-4 py-8">
        <div class="flex justify-between items-center mb-8">
            <h1 class="text-3xl font-bold text-gray-800">Discount Management</h1>
            <button id="createDiscountBtn" class="bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg flex items-center">
                <i class="fas fa-plus mr-2"></i> Create Discount
            </button>
        </div>

        <div class="bg-white rounded-lg shadow overflow-hidden">
            <table class="discount-table">
                <thead>
                    <tr>
                        <th>ID</th>
                        <th>Cart Item ID</th>
                        <th>Discount Type</th>
                        <th>Discount Value</th>
                        <th>Start Date</th>
                        <th>End Date</th>
                        <th>Is Active</th>
                        <th>Created At</th>
                        <th>Updated At</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody id="discountTableBody">
                    <!-- Discount items will be loaded here -->
                </tbody>
            </table>
        </div>
    </div>

    <!-- Create/Edit Discount Modal -->
    <div id="discountModal" class="fixed inset-0 z-50 flex items-center justify-center hidden modal">
        <div class="modal-overlay absolute inset-0"></div>
        <div class="bg-white rounded-lg shadow-xl z-50 w-full max-w-2xl modal-content">
            <div class="p-6">
                <div class="flex justify-between items-center mb-4">
                    <h3 id="modalTitle" class="text-xl font-semibold text-gray-800">Create New Discount</h3>
                    <button id="closeModalBtn" class="text-gray-500 hover:text-gray-700">
                        <i class="fas fa-times"></i>
                    </button>
                </div>

                <form id="discountForm" class="space-y-4">
                    <input type="hidden" id="discountId">

                    <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                        <div>
                            <label for="cartItemId" class="block text-sm font-medium text-gray-700 mb-1">Cart Item ID</label>
                            <input type="text" id="cartItemId" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500">
                        </div>

                        <div>
                            <label for="discountType" class="block text-sm font-medium text-gray-700 mb-1">Discount Type</label>
                            <select id="discountType" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500">
                                <option value="percentage">Percentage</option>
                                <option value="fixed_amount">Fixed Amount</option>
                                <option value="free_shipping">Free Shipping</option>
                            </select>
                        </div>

                        <div>
                            <label for="discountValue" class="block text-sm font-medium text-gray-700 mb-1">Discount Value</label>
                            <input type="number" id="discountValue" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500">
                        </div>

                        <div>
                            <label for="isActive" class="block text-sm font-medium text-gray-700 mb-1">Status</label>
                            <select id="isActive" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500">
                                <option value="true">Active</option>
                                <option value="false">Inactive</option>
                            </select>
                        </div>

                        <div>
                            <label for="startDate" class="block text-sm font-medium text-gray-700 mb-1">Start Date</label>
                            <input type="datetime-local" id="startDate" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500">
                        </div>

                        <div>
                            <label for="endDate" class="block text-sm font-medium text-gray-700 mb-1">End Date</label>
                            <input type="datetime-local" id="endDate" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500">
                        </div>
                    </div>

                    <div class="flex justify-end space-x-3 pt-4">
                        <button type="button" id="cancelBtn" class="px-4 py-2 border border-gray-300 rounded-md text-gray-700 hover:bg-gray-50">Cancel</button>
                        <button type="submit" id="saveBtn" class="px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700">Save Discount</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- Delete Confirmation Modal -->
    <div id="deleteModal" class="fixed inset-0 z-50 flex items-center justify-center hidden modal">
        <div class="modal-overlay absolute inset-0"></div>
        <div class="bg-white rounded-lg shadow-xl z-50 w-full max-w-md modal-content">
            <div class="p-6">
                <div class="flex justify-between items-center mb-4">
                    <h3 class="text-xl font-semibold text-gray-800">Confirm Deletion</h3>
                    <button id="closeDeleteModalBtn" class="text-gray-500 hover:text-gray-700">
                        <i class="fas fa-times"></i>
                    </button>
                </div>

                <p class="text-gray-600 mb-6">Are you sure you want to delete this discount? This action cannot be undone.</p>

                <div class="flex justify-end space-x-3">
                    <button type="button" id="cancelDeleteBtn" class="px-4 py-2 border border-gray-300 rounded-md text-gray-700 hover:bg-gray-50">Cancel</button>
                    <button type="button" id="confirmDeleteBtn" class="px-4 py-2 bg-red-600 text-white rounded-md hover:bg-red-700">Delete</button>
                </div>
            </div>
        </div>
    </div>

</body>

<script>
    // Sample data - in a real app, this would come from an API
    let discounts = [
        {
            id: 1,
            cartItemId: 101,
            discountType: "percentage",
            discountValue: 15,
            startDate: "2023-06-01T00:00:00",
            endDate: "2023-06-30T23:59:59",
            isActive: true,
            createdAt: "2023-05-15T10:30:00",
            updatedAt: "2023-05-15T10:30:00"
        },
        {
            id: 2,
            cartItemId: 102,
            discountType: "fixed_amount",
            discountValue: 50000,
            startDate: "2023-06-15T00:00:00",
            endDate: "2023-07-15T23:59:59",
            isActive: true,
            createdAt: "2023-06-01T09:15:00",
            updatedAt: "2023-06-01T09:15:00"
        },
        {
            id: 3,
            cartItemId: 103,
            discountType: "free_shipping",
            discountValue: 0,
            startDate: "2023-07-01T00:00:00",
            endDate: "2023-07-31T23:59:59",
            isActive: false,
            createdAt: "2023-06-20T14:45:00",
            updatedAt: "2023-06-20T14:45:00"
        }
    ];
    // DOM elements
    const discountTableBody = document.getElementById('discountTableBody');
    const createDiscountBtn = document.getElementById('createDiscountBtn');
    const discountModal = document.getElementById('discountModal');
    const deleteModal = document.getElementById('deleteModal');
    const discountForm = document.getElementById('discountForm');
    const modalTitle = document.getElementById('modalTitle');
    const closeModalBtn = document.getElementById('closeModalBtn');
    const closeDeleteModalBtn = document.getElementById('closeDeleteModalBtn');
    const cancelBtn = document.getElementById('cancelBtn');
    const cancelDeleteBtn = document.getElementById('cancelDeleteBtn');
    const confirmDeleteBtn = document.getElementById('confirmDeleteBtn');
    const saveBtn = document.getElementById('saveBtn');
    // Variables to track state
    let currentAction = 'create';
    let discountToDelete = null;
    // Initialize the page
    document.addEventListener('DOMContentLoaded', function() {
        renderDiscountTable();
        setupEventListeners();
    });
    // Render discount table
    function renderDiscountTable() {
        discountTableBody.innerHTML = '';

        discounts.forEach(discount => {
            const row = document.createElement('tr');
            row.className = 'hover:bg-gray-50';

            row.innerHTML = `
                <td class="text-gray-700">${discount.id}</td>
                <td class="text-gray-700">${discount.cartItemId}</td>
                <td class="text-gray-700 capitalize">${discount.discountType.replace('_', ' ')}</td>
                <td class="text-gray-700">
                    ${discount.discountType === 'percentage' ? discount.discountValue + '%' :
                      discount.discountType === 'fixed_amount' ? formatCurrency(discount.discountValue) :
                      'Free Shipping'}
                </td>
                <td class="text-gray-700">${formatDate(discount.startDate)}</td>
                <td class="text-gray-700">${formatDate(discount.endDate)}</td>
                <td>
                    <span class="px-2 py-1 text-xs rounded-full ${discount.isActive ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'}">
                        ${discount.isActive ? 'Active' : 'Inactive'}
                    </span>
                </td>
                <td class="text-gray-700">${formatDate(discount.createdAt)}</td>
                <td class="text-gray-700">${formatDate(discount.updatedAt)}</td>
                <td class="flex space-x-2">
                    <button class="edit-btn px-2 py-1 text-blue-600 hover:text-blue-800" data-id="${discount.id}">
                        <i class="fas fa-edit"></i>
                    </button>
                    <button class="delete-btn px-2 py-1 text-red-600 hover:text-red-800" data-id="${discount.id}">
                        <i class="fas fa-trash"></i>
                    </button>
                </td>
            `;

            discountTableBody.appendChild(row);
        });
    }
    // Set up event listeners
    function setupEventListeners() {
        // Create discount button
        createDiscountBtn.addEventListener('click', openCreateModal);

        // Close modal buttons
        closeModalBtn.addEventListener('click', closeModal);
        closeDeleteModalBtn.addEventListener('click', closeDeleteModal);
        cancelBtn.addEventListener('click', closeModal);
        cancelDeleteBtn.addEventListener('click', closeDeleteModal);

        // Save discount form
        discountForm.addEventListener('submit', handleSaveDiscount);

        // Confirm delete
        confirmDeleteBtn.addEventListener('click', handleDeleteDiscount);

        // Edit and delete buttons (delegated events)
        document.addEventListener('click', function(e) {
            if (e.target.closest('.edit-btn')) {
                const discountId = parseInt(e.target.closest('.edit-btn').getAttribute('data-id'));
                openEditModal(discountId);
            }

            if (e.target.closest('.delete-btn')) {
                const discountId = parseInt(e.target.closest('.delete-btn').getAttribute('data-id'));
                openDeleteModal(discountId);
            }
        });
    }
    // Open create modal
    function openCreateModal() {
        currentAction = 'create';
        modalTitle.textContent = 'Create New Discount';
        discountForm.reset();
        document.getElementById('discountId').value = '';
        openModal();
    }
    // Open edit modal
    function openEditModal(discountId) {
        currentAction = 'edit';
        modalTitle.textContent = 'Edit Discount';

        const discount = discounts.find(d => d.id === discountId);
        if (discount) {
            document.getElementById('discountId').value = discount.id;
            document.getElementById('cartItemId').value = discount.cartItemId;
            document.getElementById('discountType').value = discount.discountType;
            document.getElementById('discountValue').value = discount.discountValue;
            document.getElementById('isActive').value = discount.isActive;
            document.getElementById('startDate').value = formatDateTimeForInput(discount.startDate);
            document.getElementById('endDate').value = formatDateTimeForInput(discount.endDate);

            openModal();
        }
    }
    // Open delete confirmation modal
    function openDeleteModal(discountId) {
        discountToDelete = discountId;
        openDeleteModal();
    }
    // Handle save discount
    function handleSaveDiscount(e) {
        e.preventDefault();

        const discountData = {
            id: currentAction === 'edit' ? parseInt(document.getElementById('discountId').value) : discounts.length + 1,
            cartItemId: parseInt(document.getElementById('cartItemId').value),
            discountType: document.getElementById('discountType').value,
            discountValue: parseFloat(document.getElementById('discountValue').value),
            isActive: document.getElementById('isActive').value === 'true',
            startDate: document.getElementById('startDate').value,
            endDate: document.getElementById('endDate').value,
            createdAt: currentAction === 'edit' ? '' : new Date().toISOString(),
            updatedAt: new Date().toISOString()
        };

        if (currentAction === 'create') {
            discounts.push(discountData);
        } else {
            const index = discounts.findIndex(d => d.id === discountData.id);
            if (index !== -1) {
                // Preserve the original createdAt date
                discountData.createdAt = discounts[index].createdAt;
                discounts[index] = discountData;
            }
        }

        renderDiscountTable();
        closeModal();
    }
    // Handle delete discount
    function handleDeleteDiscount() {
        if (discountToDelete) {
            discounts = discounts.filter(d => d.id !== discountToDelete);
            renderDiscountTable();
            closeDeleteModal();
            discountToDelete = null;
        }
    }
    // Modal functions
    function openModal() {
        discountModal.classList.remove('hidden');
        document.body.style.overflow = 'hidden';
    }
    function closeModal() {
        discountModal.classList.add('hidden');
        document.body.style.overflow = 'auto';
    }
    function openDeleteModal() {
        deleteModal.classList.remove('hidden');
        document.body.style.overflow = 'hidden';
    }
    function closeDeleteModal() {
        deleteModal.classList.add('hidden');
        document.body.style.overflow = 'auto';
    }
    // Helper functions
    function formatDate(dateString) {
        const date = new Date(dateString);
        return date.toLocaleDateString() + ' ' + date.toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'});
    }
    function formatDateTimeForInput(dateString) {
        const date = new Date(dateString);
        const year = date.getFullYear();
        const month = String(date.getMonth() + 1).padStart(2, '0');
        const day = String(date.getDate()).padStart(2, '0');
        const hours = String(date.getHours()).padStart(2, '0');
        const minutes = String(date.getMinutes()).padStart(2, '0');

        return `${year}-${month}-${day}T${hours}:${minutes}`;
    }
    function formatCurrency(amount) {
        return new Intl.NumberFormat('id-ID', {
            style: 'currency',
            currency: 'IDR',
            minimumFractionDigits: 0
        }).format(amount);
    }
</script>


<style>
    .discount-table {
        width: 100%;
        border-collapse: collapse;
    }

        .discount-table th, .discount-table td {
            padding: 12px 15px;
            text-align: left;
            border-bottom: 1px solid #e5e7eb;
        }

        .discount-table th {
            background-color: #f9fafb;
            font-weight: 600;
            color: #374151;
        }

        .discount-table tr:hover {
            background-color: #f3f4f6;
        }

    .modal {
        transition: opacity 0.3s ease, transform 0.3s ease;
    }

    .modal-overlay {
        background-color: rgba(0, 0, 0, 0.5);
    }
</style>
